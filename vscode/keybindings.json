// Overwrite key bindings by placing them into your key bindings file.
[
    {
        "key": "escape escape",
        "command": "workbench.action.exitZenMode",
        "when": "inZenMode"
    },
    {
        "key": "shift+escape",
        "command": "closeReferenceSearchEditor",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek"
    },
    {
        "key": "escape",
        "command": "closeReferenceSearchEditor",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek"
    },
    {
        "key": "shift+escape",
        "command": "cancelSelection",
        "when": "editorHasSelection && textInputFocus"
    },
    {
        "key": "escape",
        "command": "cancelSelection",
        "when": "editorHasSelection && textInputFocus"
    },
    {
        "key": "alt+down",
        "command": "cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+down",
        "command": "cursorBottomSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+meta+alt+down",
        "command": "cursorColumnSelectDown",
        "when": "textInputFocus"
    },
    {
        "key": "shift+meta+alt+left",
        "command": "cursorColumnSelectLeft",
        "when": "textInputFocus"
    },
    {
        "key": "shift+meta+alt+pagedown",
        "command": "cursorColumnSelectPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "shift+meta+alt+pageup",
        "command": "cursorColumnSelectPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "shift+meta+alt+right",
        "command": "cursorColumnSelectRight",
        "when": "textInputFocus"
    },
    {
        "key": "shift+meta+alt+up",
        "command": "cursorColumnSelectUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "down",
        "command": "cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "shift+down",
        "command": "cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+right",
        "command": "cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "end",
        "command": "cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "cursorEndSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+end",
        "command": "cursorEndSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+left",
        "command": "cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "home",
        "command": "cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "cursorHomeSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+home",
        "command": "cursorHomeSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+b",
        "command": "cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "left",
        "command": "cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "shift+left",
        "command": "cursorLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+e",
        "command": "cursorLineEnd",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+a",
        "command": "cursorLineStart",
        "when": "textInputFocus"
    },
    {
        "key": "pagedown",
        "command": "cursorPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "shift+pagedown",
        "command": "cursorPageDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "pageup",
        "command": "cursorPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "shift+pageup",
        "command": "cursorPageUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+f",
        "command": "cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "right",
        "command": "cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "shift+right",
        "command": "cursorRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+up",
        "command": "cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+up",
        "command": "cursorTopSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "up",
        "command": "cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "shift+up",
        "command": "cursorUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+backspace",
        "command": "deleteLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+h",
        "command": "deleteLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+backspace",
        "command": "deleteLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "backspace",
        "command": "deleteLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+delete",
        "command": "deleteRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+d",
        "command": "deleteRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "delete",
        "command": "deleteRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+a",
        "command": "editor.action.selectAll",
        "when": "textInputFocus"
    },
    {
        "key": "alt+i",
        "command": "expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+o",
        "command": "lineBreakInsert",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+tab",
        "command": "outdent",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
    },
    {
        "key": "shift+alt+z",
        "command": "redo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+pagedown",
        "command": "scrollLineDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+pageup",
        "command": "scrollLineUp",
        "when": "textInputFocus"
    },
    {
        "key": "alt+pagedown",
        "command": "scrollPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "alt+pageup",
        "command": "scrollPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "tab",
        "command": "tab",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
    },
    {
        "key": "alt+z",
        "command": "undo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+escape",
        "command": "removeSecondaryCursors",
        "when": "editorHasMultipleSelections && textInputFocus"
    },
    {
        "key": "escape",
        "command": "removeSecondaryCursors",
        "when": "editorHasMultipleSelections && textInputFocus"
    },
    {
        "key": "right",
        "command": "repl.action.acceptSuggestion",
        "when": "inDebugRepl && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+f",
        "command": "actions.find"
    },
    {
        "key": "alt+e",
        "command": "actions.findWithSelection"
    },
    {
        "key": "enter",
        "command": "breakpointWidget.action.acceptInput",
        "when": "breakpointWidgetVisible && inBreakpointWidget"
    },
    {
        "key": "shift+escape",
        "command": "closeBreakpointWidget",
        "when": "breakpointWidgetVisible && textInputFocus"
    },
    {
        "key": "escape",
        "command": "closeBreakpointWidget",
        "when": "breakpointWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+escape",
        "command": "closeReviewPanel",
        "when": "reviewPanelVisible"
    },
    {
        "key": "escape",
        "command": "closeReviewPanel",
        "when": "reviewPanelVisible"
    },
    {
        "key": "alt+u",
        "command": "cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "meta+right",
        "command": "cursorWordEndRight",
        "when": "textInputFocus"
    },
    {
        "key": "shift+meta+right",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+meta+left",
        "command": "cursorWordPartLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+meta+left",
        "command": "cursorWordPartLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+meta+right",
        "command": "cursorWordPartRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+meta+right",
        "command": "cursorWordPartRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "meta+left",
        "command": "cursorWordStartLeft",
        "when": "textInputFocus"
    },
    {
        "key": "shift+meta+left",
        "command": "cursorWordStartLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+backspace",
        "command": "deleteAllLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+delete",
        "command": "deleteAllRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k",
        "command": "deleteAllRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "meta+backspace",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+meta+backspace",
        "command": "deleteWordPartLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+meta+delete",
        "command": "deleteWordPartRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "meta+delete",
        "command": "deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+k alt+c",
        "command": "editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+d",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "shift+meta+a",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+f2",
        "command": "editor.action.changeAll",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+c",
        "command": "editor.action.clipboardCopyAction",
        "when": "textInputFocus"
    },
    {
        "key": "alt+x",
        "command": "editor.action.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+v",
        "command": "editor.action.clipboardPasteAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+/",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+meta+down",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+meta+up",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+k alt+k",
        "command": "editor.action.defineKeybinding",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
    },
    {
        "key": "shift+alt+k",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "f7",
        "command": "editor.action.diffReview.next",
        "when": "isInDiffEditor"
    },
    {
        "key": "shift+f7",
        "command": "editor.action.diffReview.prev",
        "when": "isInDiffEditor"
    },
    {
        "key": "meta+f3",
        "command": "editor.action.dirtydiff.next",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+meta+f3",
        "command": "editor.action.dirtydiff.previous",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+f",
        "command": "editor.action.extensioneditor.showfind",
        "when": "activeEditor == 'workbench.editor.extension'"
    },
    {
        "key": "shift+meta+f",
        "command": "editor.action.formatDocument",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+k alt+f",
        "command": "editor.action.formatSelection",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "f12",
        "command": "editor.action.goToDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "alt+f12",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "shift+alt+.",
        "command": "editor.action.inPlaceReplace.down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+,",
        "command": "editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+]",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "meta+alt+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+meta+i",
        "command": "editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "meta+alt+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+enter",
        "command": "editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+j",
        "command": "editor.action.joinLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+\\",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "f8",
        "command": "editor.action.marker.nextInFiles",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "shift+f8",
        "command": "editor.action.marker.prevInFiles",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "meta+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "meta+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+k alt+d",
        "command": "editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "f3",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "alt+g",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "alt+f3",
        "command": "editor.action.nextSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "alt+k f12",
        "command": "editor.action.openDeclarationToTheSide",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "shift+meta+o",
        "command": "editor.action.organizeImports",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
    },
    {
        "key": "alt+[",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+f12",
        "command": "editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "meta+f12",
        "command": "editor.action.previewDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+f3",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+g",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+f3",
        "command": "editor.action.previousSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "alt+.",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+r",
        "command": "editor.action.refactor",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+f12",
        "command": "editor.action.referenceSearch.trigger",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+k alt+u",
        "command": "editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "f2",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+l",
        "command": "editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "meta+f1",
        "command": "editor.action.showAccessibilityHelp",
        "when": "editorFocus"
    },
    {
        "key": "shift+f10",
        "command": "editor.action.showContextMenu",
        "when": "textInputFocus"
    },
    {
        "key": "alt+k alt+i",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+right",
        "command": "editor.action.smartSelect.grow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+left",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "meta+alt+f",
        "command": "editor.action.startFindReplaceAction"
    },
    {
        "key": "ctrl+shift+m",
        "command": "editor.action.toggleTabFocusMode"
    },
    {
        "key": "meta+z",
        "command": "editor.action.toggleWordWrap"
    },
    {
        "key": "ctrl+t",
        "command": "editor.action.transposeLetters",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+space",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "ctrl+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+k alt+x",
        "command": "editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "escape",
        "command": "editor.action.webvieweditor.hideFind",
        "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'workbench.editor.htmlPreviewPart'"
    },
    {
        "key": "escape",
        "command": "editor.action.webvieweditor.hideFind",
        "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "alt+a",
        "command": "editor.action.webvieweditor.selectAll",
        "when": "!editorFocus && !inputFocus && activeEditor == 'workbench.editor.htmlPreviewPart'"
    },
    {
        "key": "alt+a",
        "command": "editor.action.webvieweditor.selectAll",
        "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "alt+f",
        "command": "editor.action.webvieweditor.showFind",
        "when": "!editorFocus && activeEditor == 'workbench.editor.htmlPreviewPart'"
    },
    {
        "key": "alt+f",
        "command": "editor.action.webvieweditor.showFind",
        "when": "!editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "f7",
        "command": "editor.action.wordHighlight.next",
        "when": "editorTextFocus && hasWordHighlights"
    },
    {
        "key": "shift+f7",
        "command": "editor.action.wordHighlight.prev",
        "when": "editorTextFocus && hasWordHighlights"
    },
    {
        "key": "alt+k alt+i",
        "command": "editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "f9",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "tab",
        "command": "editor.emmet.action.expandAbbreviation",
        "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
    },
    {
        "key": "meta+alt+[",
        "command": "editor.fold",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+0",
        "command": "editor.foldAll",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+/",
        "command": "editor.foldAllBlockComments",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+8",
        "command": "editor.foldAllMarkerRegions",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+1",
        "command": "editor.foldLevel1",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+2",
        "command": "editor.foldLevel2",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+3",
        "command": "editor.foldLevel3",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+4",
        "command": "editor.foldLevel4",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+5",
        "command": "editor.foldLevel5",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+6",
        "command": "editor.foldLevel6",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+7",
        "command": "editor.foldLevel7",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+[",
        "command": "editor.foldRecursively",
        "when": "editorTextFocus"
    },
    {
        "key": "meta+alt+]",
        "command": "editor.unfold",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+j",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+9",
        "command": "editor.unfoldAllMarkerRegions",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+]",
        "command": "editor.unfoldRecursively",
        "when": "editorTextFocus"
    },
    {
        "key": "tab",
        "command": "insertSnippet",
        "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
    },
    {
        "key": "ctrl+enter",
        "command": "openReferenceToSide",
        "when": "referenceSearchTreeFocused && referenceSearchVisible"
    },
    {
        "key": "enter",
        "command": "repl.action.acceptInput",
        "when": "inDebugRepl && textInputFocus"
    },
    {
        "key": "escape",
        "command": "settings.action.clearSearchResults",
        "when": "inSettingsSearch"
    },
    {
        "key": "alt+.",
        "command": "settings.action.editFocusedSetting",
        "when": "inSettingsSearch"
    },
    {
        "key": "enter",
        "command": "settings.action.focusNextSetting",
        "when": "inSettingsSearch"
    },
    {
        "key": "shift+enter",
        "command": "settings.action.focusPreviousSetting",
        "when": "inSettingsSearch"
    },
    {
        "key": "down",
        "command": "settings.action.focusSettingsFile",
        "when": "inSettingsSearch && !suggestWidgetVisible"
    },
    {
        "key": "alt+f",
        "command": "settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "meta+f5",
        "command": "workbench.action.editor.nextChange",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+meta+f5",
        "command": "workbench.action.editor.previousChange",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+escape",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "escape",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "meta+alt+enter",
        "command": "editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "shift+alt+1",
        "command": "editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "meta+enter",
        "command": "editor.action.selectAllMatches",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "meta+alt+c",
        "command": "toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "meta+alt+l",
        "command": "toggleFindInSelection",
        "when": "editorFocus"
    },
    {
        "key": "meta+alt+r",
        "command": "toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "meta+alt+w",
        "command": "toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "tab",
        "command": "jumpToNextSnippetPlaceholder",
        "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
    },
    {
        "key": "shift+tab",
        "command": "jumpToPrevSnippetPlaceholder",
        "when": "editorTextFocus && hasPrevTabstop && inSnippetMode"
    },
    {
        "key": "escape",
        "command": "leaveEditorMessage",
        "when": "messageVisible"
    },
    {
        "key": "shift+escape",
        "command": "leaveSnippet",
        "when": "editorTextFocus && inSnippetMode"
    },
    {
        "key": "escape",
        "command": "leaveSnippet",
        "when": "editorTextFocus && inSnippetMode"
    },
    {
        "key": "shift+escape",
        "command": "closeDirtyDiff",
        "when": "dirtyDiffVisible"
    },
    {
        "key": "escape",
        "command": "closeDirtyDiff",
        "when": "dirtyDiffVisible"
    },
    {
        "key": "shift+escape",
        "command": "closeMarkersNavigation",
        "when": "editorFocus && markersNavigationVisible"
    },
    {
        "key": "escape",
        "command": "closeMarkersNavigation",
        "when": "editorFocus && markersNavigationVisible"
    },
    {
        "key": "f4",
        "command": "goToNextReferenceFromEmbeddedEditor",
        "when": "inReferenceSearchEditor"
    },
    {
        "key": "shift+f4",
        "command": "goToPreviousReferenceFromEmbeddedEditor",
        "when": "inReferenceSearchEditor"
    },
    {
        "key": "shift+escape",
        "command": "closeParameterHints",
        "when": "editorTextFocus && parameterHintsVisible"
    },
    {
        "key": "escape",
        "command": "closeParameterHints",
        "when": "editorTextFocus && parameterHintsVisible"
    },
    {
        "key": "ctrl+n",
        "command": "showNextParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "meta+down",
        "command": "showNextParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "down",
        "command": "showNextParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "ctrl+p",
        "command": "showPrevParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "meta+up",
        "command": "showPrevParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "up",
        "command": "showPrevParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "tab",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "enter",
        "command": "acceptSelectedSuggestionOnEnter",
        "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
    },
    {
        "key": "shift+escape",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "escape",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "tab",
        "command": "insertBestCompletion",
        "when": "atEndOfWord && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
    },
    {
        "key": "tab",
        "command": "insertNextSuggestion",
        "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
    },
    {
        "key": "shift+tab",
        "command": "insertPrevSuggestion",
        "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
    },
    {
        "key": "alt+pagedown",
        "command": "selectNextPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "pagedown",
        "command": "selectNextPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+down",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "down",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+pageup",
        "command": "selectPrevPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "pageup",
        "command": "selectPrevPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+up",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "up",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+space",
        "command": "toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+meta+space",
        "command": "toggleSuggestionFocus",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "enter",
        "command": "acceptRenameInput",
        "when": "editorFocus && renameInputVisible"
    },
    {
        "key": "shift+escape",
        "command": "cancelRenameInput",
        "when": "editorFocus && renameInputVisible"
    },
    {
        "key": "escape",
        "command": "cancelRenameInput",
        "when": "editorFocus && renameInputVisible"
    },
    {
        "key": "shift+alt+;",
        "command": "breadcrumbs.focus",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "shift+alt+.",
        "command": "breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "meta+right",
        "command": "breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "right",
        "command": "breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "meta+left",
        "command": "breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "left",
        "command": "breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "alt+enter",
        "command": "breadcrumbs.revealFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "space",
        "command": "breadcrumbs.revealFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "alt+enter",
        "command": "breadcrumbs.revealFocusedFromTreeAside",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
    },
    {
        "key": "down",
        "command": "breadcrumbs.selectFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "enter",
        "command": "breadcrumbs.selectFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "shift+alt+.",
        "command": "breadcrumbs.toggleToOn",
        "when": "!config.breadcrumbs.enabled"
    },
    {
        "key": "shift+escape",
        "command": "closeAccessibilityHelp",
        "when": "accessibilityHelpWidgetVisible && editorFocus"
    },
    {
        "key": "escape",
        "command": "closeAccessibilityHelp",
        "when": "accessibilityHelpWidgetVisible && editorFocus"
    },
    {
        "key": "escape",
        "command": "closeReplaceInFilesWidget",
        "when": "replaceInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "meta+alt+c",
        "command": "copyFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "shift+meta+alt+c",
        "command": "copyRelativeFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "meta+enter",
        "command": "debug.openBreakpointToSide",
        "when": "breakpointsFocused"
    },
    {
        "key": "alt+enter",
        "command": "debug.openBreakpointToSide",
        "when": "breakpointsFocused"
    },
    {
        "key": "alt+backspace",
        "command": "debug.removeBreakpoint",
        "when": "breakpointsFocused && !breakpointSelected"
    },
    {
        "key": "alt+backspace",
        "command": "debug.removeWatchExpression",
        "when": "watchExpressionsFocused && !expressionSelected"
    },
    {
        "key": "shift+f9",
        "command": "editor.debug.action.toggleInlineBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "explorer.openToSide",
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
    },
    {
        "key": "meta+down",
        "command": "history.showNext",
        "when": "historyNavigationEnabled && historyNavigationWidget"
    },
    {
        "key": "down",
        "command": "history.showNext",
        "when": "historyNavigationEnabled && historyNavigationWidget"
    },
    {
        "key": "meta+up",
        "command": "history.showPrevious",
        "when": "historyNavigationEnabled && historyNavigationWidget"
    },
    {
        "key": "up",
        "command": "history.showPrevious",
        "when": "historyNavigationEnabled && historyNavigationWidget"
    },
    {
        "key": "escape",
        "command": "keybindings.editor.clearSearchResults",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "alt+c",
        "command": "keybindings.editor.copyKeybindingEntry",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "alt+k alt+k",
        "command": "keybindings.editor.defineKeybinding",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "down",
        "command": "keybindings.editor.focusKeybindings",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "meta+alt+k",
        "command": "keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "alt+k alt+backspace",
        "command": "keybindings.editor.removeKeybinding",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "alt+f",
        "command": "keybindings.editor.searchKeybindings",
        "when": "inKeybindings && !inKeybindingsSearch"
    },
    {
        "key": "meta+alt+p",
        "command": "keybindings.editor.toggleSortByPrecedence",
        "when": "inKeybindings"
    },
    {
        "key": "escape",
        "command": "list.clear",
        "when": "listFocus && listHasSelectionOrFocus && !inputFocus"
    },
    {
        "key": "alt+up",
        "command": "list.collapse",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "left",
        "command": "list.collapse",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "right",
        "command": "list.expand",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "shift+down",
        "command": "list.expandSelectionDown",
        "when": "listFocus && listSupportsMultiselect && !inputFocus"
    },
    {
        "key": "shift+up",
        "command": "list.expandSelectionUp",
        "when": "listFocus && listSupportsMultiselect && !inputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "down",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "home",
        "command": "list.focusFirst",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "end",
        "command": "list.focusLast",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "pagedown",
        "command": "list.focusPageDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "pageup",
        "command": "list.focusPageUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "up",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "alt+down",
        "command": "list.select",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "enter",
        "command": "list.select",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "alt+a",
        "command": "list.selectAll",
        "when": "listFocus && listSupportsMultiselect && !inputFocus"
    },
    {
        "key": "space",
        "command": "list.toggleExpand",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "alt+backspace",
        "command": "notification.clear",
        "when": "notificationFocus"
    },
    {
        "key": "left",
        "command": "notification.collapse",
        "when": "notificationFocus"
    },
    {
        "key": "right",
        "command": "notification.expand",
        "when": "notificationFocus"
    },
    {
        "key": "enter",
        "command": "notification.toggle",
        "when": "notificationFocus"
    },
    {
        "key": "space",
        "command": "notification.toggle",
        "when": "notificationFocus"
    },
    {
        "key": "home",
        "command": "notifications.focusFirstToast",
        "when": "notificationFocus && notificationToastsVisible"
    },
    {
        "key": "pageup",
        "command": "notifications.focusFirstToast",
        "when": "notificationFocus && notificationToastsVisible"
    },
    {
        "key": "end",
        "command": "notifications.focusLastToast",
        "when": "notificationFocus && notificationToastsVisible"
    },
    {
        "key": "pagedown",
        "command": "notifications.focusLastToast",
        "when": "notificationFocus && notificationToastsVisible"
    },
    {
        "key": "down",
        "command": "notifications.focusNextToast",
        "when": "notificationFocus && notificationToastsVisible"
    },
    {
        "key": "up",
        "command": "notifications.focusPreviousToast",
        "when": "notificationFocus && notificationToastsVisible"
    },
    {
        "key": "down",
        "command": "outline.focusDownHighlighted",
        "when": "outlineFiltered && outlineFocused"
    },
    {
        "key": "up",
        "command": "outline.focusUpHighlighted",
        "when": "outlineFiltered && outlineFocused"
    },
    {
        "key": "ctrl+enter",
        "command": "problems.action.openToSide",
        "when": "problemFocus"
    },
    {
        "key": "meta+alt+r",
        "command": "revealFileInOS",
        "when": "!editorFocus"
    },
    {
        "key": "alt+enter",
        "command": "scm.acceptInput",
        "when": "scmRepository"
    },
    {
        "key": "escape",
        "command": "search.action.cancel",
        "when": "listFocus && searchViewletVisible && !inputFocus"
    },
    {
        "key": "alt+c",
        "command": "search.action.copyMatch",
        "when": "fileMatchOrMatchFocus"
    },
    {
        "key": "meta+alt+c",
        "command": "search.action.copyPath",
        "when": "fileMatchOrFolderMatchFocus"
    },
    {
        "key": "f4",
        "command": "search.action.focusNextSearchResult",
        "when": "hasSearchResult"
    },
    {
        "key": "shift+f4",
        "command": "search.action.focusPreviousSearchResult",
        "when": "hasSearchResult"
    },
    {
        "key": "alt+up",
        "command": "search.action.focusSearchFromResults",
        "when": "firstMatchFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+enter",
        "command": "search.action.openResultToSide",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "alt+backspace",
        "command": "search.action.remove",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "shift+alt+1",
        "command": "search.action.replace",
        "when": "matchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "meta+alt+enter",
        "command": "search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "shift+alt+enter",
        "command": "search.action.replaceAllInFile",
        "when": "fileMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "shift+alt+1",
        "command": "search.action.replaceAllInFile",
        "when": "fileMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "shift+alt+enter",
        "command": "search.action.replaceAllInFolder",
        "when": "folderMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "shift+alt+1",
        "command": "search.action.replaceAllInFolder",
        "when": "folderMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "alt+down",
        "command": "search.focus.nextInputBox",
        "when": "inputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+up",
        "command": "search.focus.previousInputBox",
        "when": "inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
    },
    {
        "key": "down",
        "command": "settings.action.focusSettingsFromSearch",
        "when": "inSettingsSearch && !suggestWidgetVisible"
    },
    {
        "key": "enter",
        "command": "settings.action.focusSettingsList",
        "when": "inSettingsEditor && settingsTocRowFocus"
    },
    {
        "key": "shift+f9",
        "command": "settings.action.showContextMenu",
        "when": "inSettingsEditor"
    },
    {
        "key": "meta+alt+c",
        "command": "toggleSearchCaseSensitive",
        "when": "searchViewletFocus && searchViewletVisible && !fileMatchOrFolderMatchFocus"
    },
    {
        "key": "alt+f",
        "command": "problems.action.focusFilter",
        "when": "problemsViewFocus"
    },
    {
        "key": "alt+down",
        "command": "problems.action.focusProblemsFromFilter",
        "when": "problemsFilterFocus"
    },
    {
        "key": "alt+c",
        "command": "problems.action.copy",
        "when": "problemFocus"
    },
    {
        "key": "meta+alt+r",
        "command": "toggleSearchRegex",
        "when": "searchViewletFocus && searchViewletVisible"
    },
    {
        "key": "meta+alt+w",
        "command": "toggleSearchWholeWord",
        "when": "searchViewletFocus && searchViewletVisible"
    },
    {
        "key": "alt+w",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "alt+k alt+w",
        "command": "workbench.action.closeAllEditors"
    },
    {
        "key": "alt+k shift+alt+w",
        "command": "workbench.action.closeAllGroups"
    },
    {
        "key": "alt+k w",
        "command": "workbench.action.closeEditorsInGroup"
    },
    {
        "key": "alt+k f",
        "command": "workbench.action.closeFolder"
    },
    {
        "key": "alt+w",
        "command": "workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "meta+alt+t",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "shift+escape",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "escape",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "alt+k u",
        "command": "workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "shift+alt+w",
        "command": "workbench.action.closeWindow"
    },
    {
        "key": "alt+w",
        "command": "workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "meta+f5",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+meta+f5",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "f5",
        "command": "workbench.action.debug.continue",
        "when": "inDebugMode"
    },
    {
        "key": "f6",
        "command": "workbench.action.debug.pause",
        "when": "inDebugMode"
    },
    {
        "key": "shift+alt+f5",
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+f5",
        "command": "workbench.action.debug.run",
        "when": "!inDebugMode"
    },
    {
        "key": "f5",
        "command": "workbench.action.debug.start",
        "when": "!inDebugMode"
    },
    {
        "key": "shift+f11",
        "command": "workbench.action.debug.stepOut",
        "when": "inDebugMode"
    },
    {
        "key": "f10",
        "command": "workbench.action.debug.stepOver",
        "when": "inDebugMode"
    },
    {
        "key": "shift+f5",
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode"
    },
    {
        "key": "alt+k m",
        "command": "workbench.action.editor.changeLanguageMode"
    },
    {
        "key": "alt+k p",
        "command": "workbench.action.files.copyPathOfActiveFile"
    },
    {
        "key": "alt+n",
        "command": "workbench.action.files.newUntitledFile"
    },
    {
        "key": "alt+o",
        "command": "workbench.action.files.openFileFolder"
    },
    {
        "key": "alt+k r",
        "command": "workbench.action.files.revealActiveFileInWindows"
    },
    {
        "key": "alt+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "meta+alt+s",
        "command": "workbench.action.files.saveAll"
    },
    {
        "key": "shift+alt+s",
        "command": "workbench.action.files.saveAs"
    },
    {
        "key": "alt+k s",
        "command": "workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "alt+k o",
        "command": "workbench.action.files.showOpenedFileInNewWindow"
    },
    {
        "key": "shift+alt+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "alt+k alt+up",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "alt+k alt+down",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "alt+8",
        "command": "workbench.action.focusEighthEditorGroup"
    },
    {
        "key": "alt+5",
        "command": "workbench.action.focusFifthEditorGroup"
    },
    {
        "key": "alt+1",
        "command": "workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "alt+4",
        "command": "workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "alt+k alt+left",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "alt+k alt+right",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "alt+2",
        "command": "workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "alt+7",
        "command": "workbench.action.focusSeventhEditorGroup"
    },
    {
        "key": "alt+0",
        "command": "workbench.action.focusSideBar"
    },
    {
        "key": "alt+6",
        "command": "workbench.action.focusSixthEditorGroup"
    },
    {
        "key": "alt+3",
        "command": "workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "shift+alt+o",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "escape",
        "command": "workbench.action.hideInterfaceOverview",
        "when": "interfaceOverviewVisible"
    },
    {
        "key": "down",
        "command": "workbench.action.interactivePlayground.arrowDown",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "up",
        "command": "workbench.action.interactivePlayground.arrowUp",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "pagedown",
        "command": "workbench.action.interactivePlayground.pageDown",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "pageup",
        "command": "workbench.action.interactivePlayground.pageUp",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "alt+k enter",
        "command": "workbench.action.keepEditor"
    },
    {
        "key": "alt+k alt+r",
        "command": "workbench.action.keybindingsReference"
    },
    {
        "key": "alt+9",
        "command": "workbench.action.lastEditorInGroup"
    },
    {
        "key": "ctrl+0",
        "command": "workbench.action.lastEditorInGroup"
    },
    {
        "key": "alt+k down",
        "command": "workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "alt+k left",
        "command": "workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "alt+k right",
        "command": "workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "alt+k up",
        "command": "workbench.action.moveActiveEditorGroupUp"
    },
    {
        "key": "alt+k shift+alt+left",
        "command": "workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "alt+k shift+alt+right",
        "command": "workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "ctrl+alt+1",
        "command": "workbench.action.moveEditorToFirstGroup"
    },
    {
        "key": "ctrl+alt+9",
        "command": "workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "ctrl+alt+right",
        "command": "workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+left",
        "command": "workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+-",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+shift+-",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "alt+k alt+q",
        "command": "workbench.action.navigateToLastEditLocation"
    },
    {
        "key": "shift+alt+n",
        "command": "workbench.action.newWindow"
    },
    {
        "key": "shift+alt+]",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "meta+alt+right",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+1",
        "command": "workbench.action.openEditorAtIndex1"
    },
    {
        "key": "ctrl+2",
        "command": "workbench.action.openEditorAtIndex2"
    },
    {
        "key": "ctrl+3",
        "command": "workbench.action.openEditorAtIndex3"
    },
    {
        "key": "ctrl+4",
        "command": "workbench.action.openEditorAtIndex4"
    },
    {
        "key": "ctrl+5",
        "command": "workbench.action.openEditorAtIndex5"
    },
    {
        "key": "ctrl+6",
        "command": "workbench.action.openEditorAtIndex6"
    },
    {
        "key": "ctrl+7",
        "command": "workbench.action.openEditorAtIndex7"
    },
    {
        "key": "ctrl+8",
        "command": "workbench.action.openEditorAtIndex8"
    },
    {
        "key": "ctrl+9",
        "command": "workbench.action.openEditorAtIndex9"
    },
    {
        "key": "alt+k alt+s",
        "command": "workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "alt+,",
        "command": "workbench.action.openSettings"
    },
    {
        "key": "shift+alt+u",
        "command": "workbench.action.output.toggleOutput"
    },
    {
        "key": "shift+alt+[",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "meta+alt+left",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "alt+p",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.quickOpenView"
    },
    {
        "key": "alt+q",
        "command": "workbench.action.quit"
    },
    {
        "key": "shift+alt+t",
        "command": "workbench.action.reopenClosedEditor"
    },
    {
        "key": "shift+alt+h",
        "command": "workbench.action.replaceInFiles"
    },
    {
        "key": "shift+alt+j",
        "command": "workbench.action.search.toggleQueryDetails",
        "when": "searchViewletVisible"
    },
    {
        "key": "alt+k alt+t",
        "command": "workbench.action.selectTheme"
    },
    {
        "key": "meta+alt+tab",
        "command": "workbench.action.showAllEditors"
    },
    {
        "key": "alt+t",
        "command": "workbench.action.showAllSymbols"
    },
    {
        "key": "f1",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "shift+alt+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "alt+\\",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "alt+k alt+\\",
        "command": "workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.switchWindow"
    },
    {
        "key": "shift+alt+b",
        "command": "workbench.action.tasks.build"
    },
    {
        "key": "escape",
        "command": "workbench.action.terminal.clearSelection",
        "when": "terminalFocus && terminalTextSelected && !terminalFindWidgetVisible"
    },
    {
        "key": "alt+c",
        "command": "workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalTextSelected"
    },
    {
        "key": "alt+backspace",
        "command": "workbench.action.terminal.deleteToLineStart",
        "when": "terminalFocus"
    },
    {
        "key": "meta+backspace",
        "command": "workbench.action.terminal.deleteWordLeft",
        "when": "terminalFocus"
    },
    {
        "key": "meta+delete",
        "command": "workbench.action.terminal.deleteWordRight",
        "when": "terminalFocus"
    },
    {
        "key": "f3",
        "command": "workbench.action.terminal.findNext",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+g",
        "command": "workbench.action.terminal.findNext",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "f3",
        "command": "workbench.action.terminal.findNextTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "alt+g",
        "command": "workbench.action.terminal.findNextTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "shift+f3",
        "command": "workbench.action.terminal.findPrevious",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "shift+alt+g",
        "command": "workbench.action.terminal.findPrevious",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "shift+f3",
        "command": "workbench.action.terminal.findPreviousTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "shift+alt+g",
        "command": "workbench.action.terminal.findPreviousTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "alt+f",
        "command": "workbench.action.terminal.focusFindWidget",
        "when": "terminalFocus"
    },
    {
        "key": "alt+f",
        "command": "workbench.action.terminal.focusFindWidget",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "meta+alt+down",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "meta+alt+right",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "meta+alt+up",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "meta+alt+left",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "shift+escape",
        "command": "workbench.action.terminal.hideFindWidget",
        "when": "terminalFindWidgetVisible && terminalFocus"
    },
    {
        "key": "escape",
        "command": "workbench.action.terminal.hideFindWidget",
        "when": "terminalFindWidgetVisible && terminalFocus"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.terminal.moveToLineEnd",
        "when": "terminalFocus"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.terminal.moveToLineStart",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+`",
        "command": "workbench.action.terminal.new"
    },
    {
        "key": "shift+alt+c",
        "command": "workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+alt+down",
        "command": "workbench.action.terminal.resizePaneDown",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+alt+left",
        "command": "workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+alt+right",
        "command": "workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+alt+up",
        "command": "workbench.action.terminal.resizePaneUp",
        "when": "terminalFocus"
    },
    {
        "key": "meta+alt+pagedown",
        "command": "workbench.action.terminal.scrollDown",
        "when": "terminalFocus"
    },
    {
        "key": "pagedown",
        "command": "workbench.action.terminal.scrollDownPage",
        "when": "terminalFocus"
    },
    {
        "key": "alt+end",
        "command": "workbench.action.terminal.scrollToBottom",
        "when": "terminalFocus"
    },
    {
        "key": "alt+down",
        "command": "workbench.action.terminal.scrollToNextCommand",
        "when": "terminalFocus"
    },
    {
        "key": "alt+up",
        "command": "workbench.action.terminal.scrollToPreviousCommand",
        "when": "terminalFocus"
    },
    {
        "key": "alt+home",
        "command": "workbench.action.terminal.scrollToTop",
        "when": "terminalFocus"
    },
    {
        "key": "meta+alt+pageup",
        "command": "workbench.action.terminal.scrollUp",
        "when": "terminalFocus"
    },
    {
        "key": "pageup",
        "command": "workbench.action.terminal.scrollUpPage",
        "when": "terminalFocus"
    },
    {
        "key": "alt+a",
        "command": "workbench.action.terminal.selectAll",
        "when": "terminalFocus"
    },
    {
        "key": "shift+alt+down",
        "command": "workbench.action.terminal.selectToNextCommand",
        "when": "terminalFocus"
    },
    {
        "key": "shift+alt+up",
        "command": "workbench.action.terminal.selectToPreviousCommand",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+5",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus"
    },
    {
        "key": "alt+\\",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus"
    },
    {
        "key": "meta+alt+c",
        "command": "workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "meta+alt+c",
        "command": "workbench.action.terminal.toggleFindCaseSensitiveTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "meta+alt+r",
        "command": "workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "meta+alt+r",
        "command": "workbench.action.terminal.toggleFindRegexTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "meta+alt+w",
        "command": "workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "meta+alt+w",
        "command": "workbench.action.terminal.toggleFindWholeWordTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "meta+alt+0",
        "command": "workbench.action.toggleEditorGroupLayout"
    },
    {
        "key": "ctrl+alt+f",
        "command": "workbench.action.toggleFullScreen"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "alt+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+alt+w",
        "command": "workbench.action.toggleTabsVisibility"
    },
    {
        "key": "alt+k z",
        "command": "workbench.action.toggleZenMode"
    },
    {
        "key": "alt+numpad_add",
        "command": "workbench.action.zoomIn"
    },
    {
        "key": "shift+alt+=",
        "command": "workbench.action.zoomIn"
    },
    {
        "key": "alt+=",
        "command": "workbench.action.zoomIn"
    },
    {
        "key": "alt+numpad_subtract",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "shift+alt+-",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "alt+-",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "alt+numpad0",
        "command": "workbench.action.zoomReset"
    },
    {
        "key": "shift+alt+m",
        "command": "workbench.actions.view.problems"
    },
    {
        "key": "shift+alt+y",
        "command": "workbench.debug.action.toggleRepl"
    },
    {
        "key": "alt+k alt+m",
        "command": "workbench.extensions.action.showRecommendedKeymapExtensions"
    },
    {
        "key": "alt+k c",
        "command": "workbench.files.action.compareWithClipboard"
    },
    {
        "key": "alt+k d",
        "command": "workbench.files.action.compareWithSaved"
    },
    {
        "key": "alt+k e",
        "command": "workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "shift+alt+d",
        "command": "workbench.view.debug"
    },
    {
        "key": "shift+alt+e",
        "command": "workbench.view.explorer"
    },
    {
        "key": "shift+alt+x",
        "command": "workbench.view.extensions"
    },
    {
        "key": "ctrl+shift+g",
        "command": "workbench.view.scm"
    },
    {
        "key": "shift+alt+f",
        "command": "workbench.view.search",
        "when": "!searchViewletVisible"
    },
    {
        "key": "escape",
        "command": "breadcrumbs.selectEditor",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "f11",
        "command": "workbench.action.debug.stepInto",
        "when": "inDebugMode"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.terminal.clear",
        "when": "terminalFocus"
    },
    {
        "key": "enter",
        "command": "debug.renameWatchExpression",
        "when": "watchExpressionsFocused"
    },
    {
        "key": "enter",
        "command": "debug.setVariable",
        "when": "variablesFocused"
    },
    {
        "key": "space",
        "command": "debug.toggleBreakpoint",
        "when": "breakpointsFocused && !inputFocus"
    },
    {
        "key": "alt+backspace",
        "command": "deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !config.files.enableTrash && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "meta+alt+backspace",
        "command": "deleteFile",
        "when": "config.files.enableTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "alt+c",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "alt+v",
        "command": "filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "alt+backspace",
        "command": "moveFileToTrash",
        "when": "config.files.enableTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "enter",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "shift+escape",
        "command": "closeReferenceSearch",
        "when": "referenceSearchVisible && !config.editor.stablePeek"
    },
    {
        "key": "escape",
        "command": "closeReferenceSearch",
        "when": "referenceSearchVisible && !config.editor.stablePeek"
    },
    {
        "key": "f4",
        "command": "goToNextReference",
        "when": "referenceSearchVisible"
    },
    {
        "key": "shift+f4",
        "command": "goToPreviousReference",
        "when": "referenceSearchVisible"
    },
    {
        "key": "escape",
        "command": "notifications.hideList",
        "when": "notificationCenterVisible"
    },
    {
        "key": "escape",
        "command": "notifications.hideToasts",
        "when": "notificationToastsVisible"
    },
    {
        "key": "ctrl+-",
        "command": "workbench.action.quickInputBack",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "alt+p",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.quickOpenNavigateNextInViewPicker",
        "when": "inQuickOpen && inViewsPicker"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "shift+alt+p",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+r",
        "command": "workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "ctrl+shift+q",
        "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
        "when": "inQuickOpen && inViewsPicker"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "alt+f4",
        "command": "extension.node-debug.pickLoadedScript",
        "when": "debugType == 'node'"
    },
    {
        "key": "alt+f4",
        "command": "extension.node-debug.pickLoadedScript",
        "when": "debugType == 'node2'"
    },
    {
        "key": "shift+alt+v",
        "command": "markdown.showPreview",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "shift+meta+f12",
        "command": "references-view.find",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "f10",
        "command": "extension.node-debug.startWithStopOnEntry",
        "when": "!inDebugMode && debugConfigurationType == 'node'"
    },
    {
        "key": "alt+k v",
        "command": "markdown.showPreviewToSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "f4",
        "command": "references-view.showNextReference",
        "when": "reference-list.hasResult"
    },
    {
        "key": "f11",
        "command": "extension.node-debug.startWithStopOnEntry",
        "when": "!inDebugMode && debugConfigurationType == 'node'"
    },
    {
        "key": "shift+f4",
        "command": "references-view.showPrevReference",
        "when": "reference-list.hasResult"
    },
    {
        "key": "ctrl+f12",
        "command": "C_Cpp.GoToDeclaration",
        "when": "editorTextFocus && editorLangId == 'cpp'"
    },
    {
        "key": "meta+alt+r",
        "command": "arduino.verify"
    },
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "shift+enter",
        "command": "python.execSelectionInTerminal",
        "when": "editorFocus && !findInputFocussed && !python.datascience.hascodecells && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "ctrl+shift+meta+x",
        "command": "xmlTools.evaluateXPath"
    },
    {
        "key": "ctrl+f12",
        "command": "C_Cpp.GoToDeclaration",
        "when": "editorTextFocus && editorLangId == 'c'"
    },
    {
        "key": "meta+alt+u",
        "command": "arduino.upload"
    },
    {
        "key": "shift+a",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "shift+enter",
        "command": "python.datascience.runcurrentcelladvance",
        "when": "editorFocus && python.datascience.featureenabled && python.datascience.hascodecells"
    },
    {
        "key": "ctrl+shift+meta+b",
        "command": "xmlTools.formatAsXml"
    },
    {
        "key": "ctrl+meta+f12",
        "command": "C_Cpp.PeekDeclaration",
        "when": "editorTextFocus && editorLangId == 'cpp'"
    },
    {
        "key": "alt+1",
        "command": "explorer.openToSide",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "ctrl+meta+f12",
        "command": "C_Cpp.PeekDeclaration",
        "when": "editorTextFocus && editorLangId == 'c'"
    },
    {
        "key": "backspace",
        "command": "moveFileToTrash",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "meta+o",
        "command": "C_Cpp.SwitchHeaderSource",
        "when": "editorTextFocus && editorLangId == 'cpp'"
    },
    {
        "key": "alt+c",
        "command": "filesExplorer.copy",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "meta+o",
        "command": "C_Cpp.SwitchHeaderSource",
        "when": "editorTextFocus && editorLangId == 'c'"
    },
    {
        "key": "h",
        "command": "list.collapse",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "meta+n",
        "command": "C_Cpp.Navigate",
        "when": "editorTextFocus && editorLangId == 'cpp'"
    },
    {
        "key": "l",
        "command": "list.expand",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "meta+n",
        "command": "C_Cpp.Navigate",
        "when": "editorTextFocus && editorLangId == 'c'"
    },
    {
        "key": "j",
        "command": "list.focusDown",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "k",
        "command": "list.focusUp",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "ctrl+shift+alt+f",
        "command": "workbench.action.toggleZenMode"
    },
    {
        "key": "ctrl+alt+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+d",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+k",
        "command": "editor.action.deleteLines",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "alt+\\",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "alt+k left",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "alt+t",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+meta+b",
        "command": "editor.action.formatDocument"
    },
    {
        "key": "alt+b",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.editor.changeLanguageMode"
    },
    {
        "key": "ctrl+shift+m",
        "command": "markdown.showPreviewToSide"
    },
    {
        "key": "ctrl+meta+alt+l",
        "command": "workbench.action.reloadWindow"
    },
    {
        "key": "ctrl+shift+o",
        "command": "editor.action.openLink"
    },
    {
        "key": "meta+alt+i",
        "command": "workbench.action.toggleDevTools"
    },
    {
        "key": "shift+meta+s",
        "command": "editor.action.showSnippets"
    },
    {
        "key": "ctrl+shift+o",
        "command": "workbench.action.files.openFolder"
    },
    {
        "key": "shift+alt+o",
        "command": "workbench.action.files.openFileFolder"
    },
    {
        "key": "ctrl+m",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+l",
        "command": "expandLineSelection",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+up",
        "command": "cursorColumnSelectUp",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+down",
        "command": "cursorColumnSelectDown",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+meta+b",
        "command": "editor.action.format",
        "when": "editorHasFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+meta+t",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+alt+f",
        "command": "workbench.action.toggleFullScreen"
    },
    {
        "key": "alt+r",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "meta+alt+[",
        "command": "editor.fold",
        "when": "editorTextFocus"
    },
    {
        "key": "meta+alt+]",
        "command": "editor.unfold",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+meta+alt+[",
        "command": "editor.foldAll",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+meta+alt+]",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+7",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+=",
        "command": "workbench.action.zoomIn"
    },
    {
        "key": "alt+-",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "alt+k alt+1",
        "command": "editor.foldLevel1",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+2",
        "command": "editor.foldLevel2",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+3",
        "command": "editor.foldLevel3",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+4",
        "command": "editor.foldLevel4",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+5",
        "command": "editor.foldLevel5",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+pagedown",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+pageup",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "ctrl+alt+g",
        "command": "editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+l",
        "command": "editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorHasSelection && editorTextFocus"
    },
    {
        "key": "alt+-",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "alt+1",
        "command": "workbench.action.openEditorAtIndex1"
    },
    {
        "key": "alt+2",
        "command": "workbench.action.openEditorAtIndex2"
    },
    {
        "key": "alt+3",
        "command": "workbench.action.openEditorAtIndex3"
    },
    {
        "key": "alt+4",
        "command": "workbench.action.openEditorAtIndex4"
    },
    {
        "key": "alt+5",
        "command": "workbench.action.openEditorAtIndex5"
    },
    {
        "key": "alt+6",
        "command": "workbench.action.openEditorAtIndex6"
    },
    {
        "key": "alt+7",
        "command": "workbench.action.openEditorAtIndex7"
    },
    {
        "key": "alt+8",
        "command": "workbench.action.openEditorAtIndex8"
    },
    {
        "key": "alt+9",
        "command": "workbench.action.openEditorAtIndex9"
    },
    {
        "key": "meta+alt+\\",
        "command": "workbench.files.action.showActiveFileInExplorer"
    },
    {
        "key": "ctrl+shift+c",
        "command": "workbench.action.files.copyPathOfActiveFile"
    },
    {
        "key": "alt+,",
        "command": "workbench.action.openGlobalSettings"
    },
    {
        "key": "alt+b",
        "command": "workbench.action.showAllEditors"
    },
    {
        "key": "ctrl+shift+alt+f",
        "command": "workbench.action.toggleZenMode"
    },
    {
        "key": "alt+y",
        "command": "redo"
    },
    {
        "key": "alt+j",
        "command": "editor.action.joinLines"
    },
    {
        "key": "alt+p",
        "command": "workbench.action.quickOpenPreviousEditor"
    }
]